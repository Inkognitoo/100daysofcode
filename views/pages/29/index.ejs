<!DOCTYPE html>
<html lang="en" style="height: 100%">
<head>
    <meta charset="UTF-8">
    <title>29</title>
    <% include ../../partials/bootstrap.ejs %>
    <style>
        canvas {
            outline: 1px solid black;
            max-width: 100%;
            max-height: 100%;
        }
        html, body {
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body style="height: 98%">

<div class="container" style="height: 100%">
    <div class="panel panel-default" style="height: 95%">
        <div class="panel-heading">
            <a href="/">на главную</a>
        </div>
        <div class="panel-body" style="height: 95%">
            <canvas id='canvas' width='2000' height='2000'></canvas>
        </div>
    </div>
</div>

<script src="/js/socket.io.min.js"></script>
<script src="/js/createjs.min.js"></script>
<script>
    let socket = io(location.origin);
    let stage = new createjs.Stage("canvas");

    stage.canvas.width = window.innerWidth;
    stage.canvas.height = window.innerHeight;

    let circle = new createjs.Shape();
    let size = randomInteger(50, 150);
    let color = '#'+(Math.random()*0xFFFFFF<<0).toString(16);
    circle.graphics.beginFill(color).drawCircle(0, 0, size);
    circle.x = 100;
    circle.y = 100;
    stage.addChild(circle);
    socket.emit('29_command_send', {x: circle.x, y: circle.y, size: size, color: color});

    setTimeout(function () {
        stage.update();
    }, 1)

    createjs.Touch.enable(stage);
    circle.on("pressmove", function(evt) {
        evt.target.x = evt.stageX;
        evt.target.y = evt.stageY;
        stage.update();
        socket.emit('29_command_send', {x: evt.stageX, y: evt.stageY, size: size, color: color});
    });

    socket.on('29_command_listen', function (data) {
        stage.removeAllChildren();
        stage.addChild(circle);
        for (let key in data) {
            if(key !== socket.id) {
                let circle = new createjs.Shape();
                let size = data[key].size;
                let color = data[key].color;
                circle.graphics.beginFill(color).drawCircle(0, 0, size);
                circle.x = data[key].x;
                circle.y = data[key].y;
                stage.addChild(circle);
            }
        }

        setTimeout(function () {
            stage.update();
        }, 1)
    });

    window.onresize = function(event) {
        stage.canvas.width = window.innerWidth;
        stage.canvas.height = window.innerHeight;
        stage.update();
    };

    function randomInteger(min, max) {
        let rand = min - 0.5 + Math.random() * (max - min + 1)
        rand = Math.round(rand);
        return rand;
    }
</script>
</body>
</html>